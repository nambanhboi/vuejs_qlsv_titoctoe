<template>
    <div class="container">
        <h1>Quản lý Sinh viên</h1>
        <div class="search border">
            <span>Từ khóa: </span>
            <input type="text" id="txtTimKiem" placeholder="Từ khóa cần tìm" name="txtTuKhoa" v-model="inputsearch">
            <button id="timkiem" @click="handleSearch">Tìm kiếm</button>
        </div>
    
        <div class="display_info border">
            <table border="1">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" id="check_all" @change="changeAllChecked" :checked="checkedall">
                        </th>
                        <th>Mã SV</th>
                        <th>Tên SV</th>
                        <th>Ngày sinh</th>
                        <th>Giới tính</th>
                        <th>Khoa</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="table_sv" >
                    <tr v-for="(sinhvien, index) in (SinhVienSearchs.length ? SinhVienSearchs : SinhViens)" :key="index" @change="changTableSV">
                        <td><input type="checkbox" class='check_one' :checked="arrDel.includes(sinhvien.MaSv)" @change="changeChecked(sinhvien.MaSv)"></td>
                        <td>{{ sinhvien.MaSv }}</td>
                        <td>{{ sinhvien.TenSv }}</td>
                        <td>{{ sinhvien.NgaySinh }}</td>
                        <td>{{ sinhvien.GioiTinh }}</td>
                        <td>{{ TenKhoas[sinhvien.MaSv] }}</td>
                        <td><i class="bi bi-pen edit" @click="handleFillInput(sinhvien.MaSv)"></i></td>
                        <td><i class="bi bi-trash3 delete" @click="handleDeleteSV(sinhvien.MaSv)" ></i></td>
                    </tr>
                </tbody>
            </table>   
        </div>
        <div class="edit_info border" >
            <div class="buttons">
                <button @click="handleAddSV" :disabled="Disable">Thêm mới</button>
                <button id="sua" @click="handleEditSV">Cập nhật</button>
                <button id="lammoi" @click="handleRefreshInput">Làm mới</button>
                <button id="xoa" @click="handleDeleteSVs">Xóa</button>
            </div>
            <div class="enter_info">
                <div class="detail_info">
                    <label for="txtMaSV">Mã SV</label>
                    <input type="text" name="txtMaSV" v-model="MaSv" :disabled="Disable">
                </div>
                <div class="detail_info">
                    <label for="txtTenSV">Tên SV</label>
                    <input type="text" name="txtTenSV" v-model="TenSv">
                </div>
                <div class="detail_info">
                    <label for="txtNgaySinh">Ngày sinh</label>
                    <input type="date" name="txtNgaySinh" v-model="NgaySinh">
                </div>
                <div class="detail_info">
                    <label for="rdbGioiTinh">Giới tính</label>
                    <div>
                        <label for="">Nam</label>
                        <input type="radio" value="Nam" name="rdbGioiTinh" checked v-model="GioiTinh">
                        <label>Nữ</label>
                        <input type="radio" value="Nữ" name="rdbGioiTinh" v-model="GioiTinh">
                    </div>
                </div>
                <div class="detail_info">
                    <label>Khoa</label>
                    <select name="drpKhoa" id="" v-model="MaKhoa">
                        <option value="CNTT">Công nghệ thông tin</option>
                        <option value="DTVT">Điện tử viễn thông</option>
                        <option value="KT" selected>Kinh tế</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

</template>

<script>
import '../../assets/styles/qlsv.css'
import { ADD_SINH_VIEN_ACTION, DELETE_SINH_VIEN_ACTION, EDIT_SINH_VIEN_ACTION, GET_SINH_VIEN_GETTER, GET_TEN_KHOA_GETTER } from '@/store/storeconstants';
import { mapActions, mapGetters } from 'vuex';

export default {
    name: 'qlsv2-',
    data() {
        return {
            MaSv: '',
            TenSv: '',
            NgaySinh: '',
            GioiTinh: 'Nam',
            MaKhoa: '',
            Disable: false,
            arrDel: [], 
            checkedall: false,
            inputsearch: '',
            SinhVienSearchs: []
        }
    },
    computed: {
        ...mapGetters('sv', {
            SinhViens: GET_SINH_VIEN_GETTER
        }),
        ...mapGetters('sv', {
            TenKhoas: GET_TEN_KHOA_GETTER
        }),
    },
    mounted() {
        console.log(this.SinhViens)
    },
    methods: {
        ...mapActions('sv', {
            addsinhvien: ADD_SINH_VIEN_ACTION
        }),
        ...mapActions('sv', {
            editsinhvien: EDIT_SINH_VIEN_ACTION
        }),
        ...mapActions('sv', {
            deletesinhvien: DELETE_SINH_VIEN_ACTION
        }),
        validateInput() {
            if(this.MaSv == '' || this.TenSv == '' || this.NgaySinh == '' || this.GioiTinh == '' || this.MaKhoa == '') {
                return true
            }
            return false
        },
        handleAddSV() {
            if(this.validateInput()) {
                alert('vui long nhap day du thong tin')
            }
            else {
                const sv = {
                    MaSv: this.MaSv,
                    TenSv: this.TenSv,
                    NgaySinh: this.NgaySinh,
                    GioiTinh: this.GioiTinh,
                    MaKhoa: this.MaKhoa
                }
                this.addsinhvien(sv);
                this.handleRefreshInput()
            }
        },
        handleFillInput(masv) {
            
            let sinhvien = this.SinhViens.filter(sv => sv.MaSv === masv)[0]
            this.MaSv = sinhvien.MaSv
            this.TenSv = sinhvien.TenSv
            this.NgaySinh = sinhvien.NgaySinh
            this.GioiTinh = sinhvien.GioiTinh
            this.MaKhoa = sinhvien.MaKhoa   
            this.Disable =true;         
        },
        handleEditSV() {
            if(this.validateInput()) {
                alert('vui long nhap day du thong tin')
            }
            else {
                const sv = {
                    MaSv: this.MaSv,
                    TenSv: this.TenSv,
                    NgaySinh: this.NgaySinh,
                    GioiTinh: this.GioiTinh,
                    MaKhoa: this.MaKhoa
                }
                this.editsinhvien(sv);
                this.handleRefreshInput();
            }
        },
        handleRefreshInput() {
            this.MaSv = ''
            this.TenSv = ''
            this.NgaySinh = ''
            this.GioiTinh = 'Nam'
            this.MaKhoa = '' 
            this.Disable = false
        },
        handleDeleteSV(masv) {
            const arrDel = []
            if(confirm('Ban co muo xoa sinh vien nay khong?')) {
                arrDel.push(masv)
                this.deletesinhvien(arrDel)
            }
        },
        changeChecked(masv) {
            console.log(masv)
            if(this.arrDel.includes(masv)) {
                console.log('bo tich')
                this.arrDel = this.arrDel.filter(item => item !== masv)
            }
            else {
                console.log('tich')
                this.arrDel.push(masv)
            }
            console.log(this.arrDel)
        },
        changeAllChecked() {
            console.log('hien tai',this.checkedall)
            if( !this.checkedall) {
                console.log('tich ta ca')
                if(this.SinhVienSearchs) {
                    this.arrDel = this.SinhVienSearchs.map(sv => sv.MaSv)
                }
                else {
                    this.arrDel = this.SinhViens.map(sv => sv.MaSv)
                }
                console.log(this.arrDel)
            }
            else {
                this.arrDel = []
            }
            if (this.arrDel.length === this.SinhViens.length) {
                this.checkedall = true;
            } else {
                this.checkedall = false;
            }
        }, 
        handleDeleteSVs() {
            if(confirm('bạn có muốn xóa các ô đã chọn')) {
                this.deletesinhvien(this.arrDel);
            }
        },
        handleSearch() {
            this.SinhVienSearchs = this.SinhViens.filter(sv => {
                return sv.TenSv.toUpperCase().includes(this.inputsearch.toUpperCase()) ||
                sv.MaSv.toUpperCase().includes(this.inputsearch.toUpperCase()) ||
                sv.NgaySinh.toUpperCase().includes(this.inputsearch.toUpperCase()) ||
                sv.GioiTinh.toUpperCase().includes(this.inputsearch.toUpperCase()) ||
                sv.MaKhoa.toUpperCase().includes(this.inputsearch.toUpperCase())
            })
        },
        

    },
    watch: {
        inputsearch() {
            if(this.inputsearch === '') {
                console.log('trong')
                this.SinhVienSearchs = []
            }
        },
        
    }

}
</script>



https://chat.openai.com/share/c016d1e7-cffb-4dc3-b6a5-a65a10702a67